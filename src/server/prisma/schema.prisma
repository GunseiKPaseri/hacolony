// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../generated/client"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db/dev.db"
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String

  ownAvatars   Avatar[] @relation("UserOwnsAvatars")
  selfAvatar   Avatar?  @relation("UserSelfAvatar", fields: [selfAvatarId], references: [id])
  selfAvatarId String?  @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Avatar {
  id          String  @id @default(cuid())
  name        String
  description String?
  imageUrl    String?
  hidden      Boolean

  owner    User   @relation("UserOwnsAvatars", fields: [ownerId], references: [id])
  ownerId  String
  selfUser User?  @relation("UserSelfAvatar")

  followers Follow[] @relation("AvatarFollowers")
  following Follow[] @relation("AvatarFollowing")

  posts Post[] @relation("AvatarPosts")

  botConfig BotConfig?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BotConfig {
  id     String @id @default(cuid())
  prompt String

  avatar   Avatar @relation(fields: [avatarId], references: [id])
  avatarId String @unique
}

model Post {
  id      String @id @default(cuid())
  content String

  postedBy   Avatar @relation("AvatarPosts", fields: [postedById], references: [id])
  postedById String

  replyTo   Post?   @relation("PostReplies", fields: [replyToId], references: [id])
  replyToId String?
  replies   Post[]  @relation("PostReplies")

  quotedPost   Post?   @relation("PostQuotes", fields: [quotedPostId], references: [id])
  quotedPostId String?
  quotes       Post[]  @relation("PostQuotes")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id String @id @default(cuid())

  follower    Avatar @relation("AvatarFollowers", fields: [followerId], references: [id])
  followerId  String
  following   Avatar @relation("AvatarFollowing", fields: [followingId], references: [id])
  followingId String

  createdAt DateTime @default(now())

  @@unique([followerId, followingId])
}
