name: Deploy to Production

on:
  push:
    branches: [main]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "production"
        type: choice
        options:
          - staging
          - production

jobs:
  # Pre-deployment checks
  pre-deploy-checks:
    name: 🔍 Pre-deployment Checks
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run all pre-deploy checks
        id: check
        run: |
          # Run tests
          npm test

          # Check build
          npm run build

          # Security audit
          npm audit --audit-level high

          # Type check
          npm run check

          echo "should-deploy=true" >> $GITHUB_OUTPUT

  # Build and prepare deployment
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: pre-deploy-checks
    if: needs.pre-deploy-checks.outputs.should-deploy == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Create deployment artifact
        run: |
          tar -czf deployment.tar.gz \
            .next/ \
            package.json \
            package-lock.json \
            src/server/prisma/ \
            public/

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployment-artifact
          path: deployment.tar.gz
          retention-days: 30

  # Database migration (production)
  migrate-database:
    name: 🗃️ Database Migration
    runs-on: ubuntu-latest
    needs: [pre-deploy-checks, build]
    if: needs.pre-deploy-checks.outputs.should-deploy == 'true'
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run database migrations
        run: npm run db:migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  # Deploy to staging (optional)
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, migrate-database]
    if: github.event.inputs.environment == 'staging' || github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-artifact

      - name: Deploy to staging
        id: deploy
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here
          echo "url=https://staging.hacolony.app" >> $GITHUB_OUTPUT

      - name: Run smoke tests
        run: |
          echo "Running smoke tests on staging..."
          # Add smoke tests here

  # Deploy to production
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, migrate-database]
    if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && (github.event.inputs.environment == 'production' || github.event.inputs.environment == '')
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-artifact

      - name: Deploy to production
        id: deploy
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
          echo "url=https://hacolony.app" >> $GITHUB_OUTPUT

      - name: Run smoke tests
        run: |
          echo "Running smoke tests on production..."
          # Add smoke tests here

      - name: Notify deployment success
        if: success()
        run: |
          echo "🎉 Production deployment successful!"
          # Add notification logic (Slack, Discord, etc.)

  # Post-deployment monitoring
  post-deploy-monitoring:
    name: 📊 Post-deployment Monitoring
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: success()
    steps:
      - name: Setup monitoring
        run: |
          echo "Setting up post-deployment monitoring..."
          # Add monitoring setup here

      - name: Health check
        run: |
          echo "Running post-deployment health checks..."
          # Add health check commands here

      - name: Performance baseline
        run: |
          echo "Establishing performance baseline..."
          # Add performance monitoring setup here

  # Rollback capability
  rollback:
    name: 🔄 Rollback Deployment
    runs-on: ubuntu-latest
    if: failure() && (needs.deploy-production.result == 'failure' || needs.post-deploy-monitoring.result == 'failure')
    environment:
      name: production
    steps:
      - name: Initiate rollback
        run: |
          echo "🚨 Initiating rollback due to deployment failure..."
          # Add rollback commands here

      - name: Notify rollback
        run: |
          echo "🔄 Rollback completed"
          # Add notification logic
